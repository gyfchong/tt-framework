{
  "name": "tt-framework",
  "version": "1.0.0",
  "description": "A Static HTML generator, featuring EJS, SCSS (with Neat) and ES6 (with Babel and Browserify)",
  "keywords": [
    "npm scripts",
    "ejs",
    "cssnext",
    "sass",
    "scss",
    "neat",
    "es6",
    "babel",
    "browserify"
  ],
  "author": "Taiyo Totsuka <ttaiyo@me.com>",
  "license": "MIT",
  "devDependencies": {
    "autoprefixer": "^6.7.5",
    "babel-core": "^6.23.1",
    "babel-loader": "^6.3.2",
    "babel-preset-env": "^1.2.0",
    "babel-preset-es2015": "^6.22.0",
    "babelify": "^7.3.0",
    "bourbon-neat": "^2.0.0",
    "browser-sync": "^2.18.8",
    "browserify": "^14.1.0",
    "chalk": "^1.1.3",
    "clean-html": "^1.4.3",
    "cssnano": "^3.10.0",
    "ddbreakpoints": "^1.1.1",
    "ejs": "^2.5.6",
    "eslint": "^3.16.1",
    "eslint-config-standard": "^6.2.1",
    "eslint-loader": "^1.6.3",
    "eslint-plugin-promise": "^3.4.2",
    "eslint-plugin-standard": "^2.0.1",
    "glob": "^7.1.1",
    "mkdirp": "^0.5.1",
    "node-notifier": "^5.0.2",
    "node-sass": "^4.5.0",
    "node-sass-glob-importer": "^3.0.2",
    "normalize.css": "^5.0.0",
    "npm-run-all": "^4.0.2",
    "onchange": "^3.2.1",
    "postcss-cli": "^3.0.0-beta",
    "postcss-cssnext": "^2.9.0",
    "postcss-custom-media": "^5.0.1",
    "postcss-import": "^9.1.0",
    "postcss-reporter": "^3.0.0",
    "prettyjson": "^1.2.1",
    "rimraf": "^2.6.1",
    "sass-lint": "^1.10.2",
    "stylelint-config-standard": "^16.0.0",
    "svg-sprite": "^1.3.6",
    "uglify-js": "^2.7.5",
    "webpack": "^2.2.1"
  },
  "scripts": {
    "clean:html": "rimraf dist/*.html",
    "clean:css": "rimraf dist/assets/css",
    "clean:image": "rimraf dist/assets/img",
    "clean:js": "rimraf dist/assets/js",
    "clean:all": "npm-run-all clean:html clean:css clean:image clean:js",
    "html": "node scripts/html.js",
    "build:html": "npm-run-all html",
    "watch:html": "onchange \"src/views/**/*.ejs\" -- npm run build:html",
    "postcss:dev": "postcss -u autoprefixer -r \"dist/assets/css/*\"",
    "postcss:prod": "postcss -u autoprefixer cssnano -r \"dist/assets/css/*\" --no-map true",
    "sass-lint": "sass-lint \"src/assets/css/**/*.scss\" -v -q",
    "css:dev_old": "node-sass \"src/assets/css\" -o \"dist/assets/css\" --output-style compressed  --source-map-contents --source-map-embed --precision 5 2>&1 | prettyjson",
    "css:prod_old": "node-sass --output-style compressed -o dist/assets/css src/assets/css --precision 5 2>&1 | prettyjson",
    "sass:dev": "node scripts/sass.js dev",
    "sass:prod": "node scripts/sass.js",
    "watch:css": "onchange \"src/assets/css\" -- npm run sass:dev",
    "dev:css": "npm-run-all sass-lint sass:dev postcss:dev",
    "prod:css": "npm-run-all clean:css sass-lint css:prod postcss:prod",
    "aaa": "postcss \"src/assets/css/style.css\" -o \"dist/assets/css/style.css\"",
    "icon": "imagemin src/assets/img/svg-src/*.svg -o src/assets/img/svg-min && svg-sprite --symbol --symbol-example --dest=dist/assets/img/svg src/assets/img/svg-min/*.svg",
    "imagemin": "imagemin 'src/assets/img/**/*' '!src/assets/img/svg-{src,min}/**/*' -o dist/assets/img",
    "image:dev": "npm-run-all clean:image imagemin icon",
    "eslint": "eslint -f 'scripts/eslint.js' src/assets/js || true",
    "browserify:dev": "mkdirp dist/assets/js -p && browserify --debug src/assets/js/*.js -t babelify --outfile dist/assets/js/bundle.js",
    "browserify:prod": "mkdirp dist/assets/js -p && browserify src/assets/js/*.js -t babelify --outfile dist/assets/js/bundle.js",
    "uglifyjs": "uglifyjs dist/assets/js/bundle.js -o dist/assets/js/bundle.js",
    "js:dev": "npm-run-all eslint browserify:dev",
    "js:prod": "npm-run-all clean:js eslint browserify:prod uglifyjs",
    "watch:js": "onchange \"src/assets/js\" -- npm run js:dev",
    "webpack:dev": "webpack --progress --colors",
    "webpack:prod": "webpack -p --progress",
    "server": "browser-sync start --config bs-config.js",
    "dev": "npm-run-all -p watch:html watch:css watch:js server",
    "prod": "npm-run-all prod:css prod:js"
  }
}
